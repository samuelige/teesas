{"version":3,"file":"static/js/978.b7880e66.chunk.js","mappings":"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","sources":["components/Custom_InputField/InputFieldStyle.ts","components/Custom_InputField/InputField.tsx","components/Button/NextBtnStyles.ts","components/Button/NextBtn.tsx","components/CustomRadioButton/CustomRadioBtnStyle.ts","components/CustomRadioButton/CustomRadioButton.tsx","components/SelectCountry/SelectStyles.ts","components/SelectCountry/SelectCountry.tsx","pages/Register/RegisterStyle.ts","pages/Register/Register.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Inputcontainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 1rem;\r\n    border: none;\r\n    border-radius: 4px;\r\n    background: ${(props) => props.theme.colors.white};\r\n    outline: none;\r\n\r\n    input {\r\n        border: 0;\r\n        width: 100%;\r\n        font-size: 16px;\r\n        // color: #555;\r\n        height: 4rem;\r\n        outline: none;\r\n    }\r\n\r\n    svg {\r\n        color: ${(props) => props.theme.colors.black};\r\n\r\n    }\r\n\r\n    &:focus {\r\n        border: 1px solid #aaa;\r\n    }\r\n\r\n    @media screen and (max-width: 900px) {\r\n        // padding: 2rem;\r\n    }\r\n\r\n\r\n\r\n`;\r\n\r\nexport { Inputcontainer };\r\n","import React, { ChangeEvent, useEffect, useRef, useState } from 'react'\r\nimport { AiFillEyeInvisible } from 'react-icons/ai';\r\nimport { Inputcontainer } from './InputFieldStyle';\r\n\r\ninterface I_InputData {\r\n    type: string,\r\n    placeholder: string,\r\n    value: string | number,\r\n    name: string,\r\n    handleChange:  (e: ChangeEvent<HTMLInputElement>) => void;\r\n    setIcon?: boolean;\r\n};\r\n\r\nconst InputField = ({type, name, value, placeholder, handleChange, setIcon}: I_InputData) => {\r\n    const [viewPassword, setViewPassword] = useState<boolean>(false);\r\n    const toggleContainer = useRef<HTMLDivElement>(null);\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n        window.addEventListener('click', onClickOutsideHandler);\r\n\r\n        return () => {\r\n          window.removeEventListener('click', onClickOutsideHandler);\r\n        }\r\n        \r\n    }, [viewPassword])\r\n\r\n    const handleViewPassword = () => {\r\n        setViewPassword(true);\r\n    }\r\n    const handleClosePassword = () => {\r\n        setViewPassword(false);\r\n    }\r\n\r\n    const onClickOutsideHandler = (e: MouseEvent) => {\r\n        if (toggleContainer.current && !toggleContainer.current.contains(e.target as Node)) {\r\n            setViewPassword(false);\r\n        }\r\n    }\r\n    return (\r\n        <Inputcontainer ref={toggleContainer}>\r\n            <input type={viewPassword ? type = 'text' : type} name={name} value={value} placeholder={placeholder} onChange={handleChange}/> \r\n\r\n            {\r\n                setIcon && (\r\n                    <AiFillEyeInvisible onClick={!viewPassword ? handleViewPassword : handleClosePassword}/>\r\n                )\r\n            } \r\n        </Inputcontainer>\r\n    )\r\n}\r\n\r\nexport default InputField","import styled from \"styled-components\";\r\n\r\nconst Container = styled.button`\r\n    width: 100%;\r\n    padding: 0.5rem 1rem;\r\n    outline: none;\r\n    text-align: center;\r\n    background: ${(props) => props.theme.colors.lightGrey};\r\n    border: 1px solid ${(props) => props.theme.colors.white};\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n    color: ${(props) => props.theme.colors.white};\r\n\r\n    &:hover {\r\n        background: ${(props) => props.theme.colors.black};\r\n    }\r\n`;\r\n\r\nexport { Container };","import React, { ReactNode } from 'react'\r\nimport { Container } from './NextBtnStyles';\r\n\r\ninterface BtnTypes {\r\n    children: ReactNode;\r\n    handleClckEvent: () => void ;\r\n}\r\n\r\nconst NextBtn = ({children, handleClckEvent }: BtnTypes) => {\r\n  return (\r\n    <Container onClick={handleClckEvent}>\r\n        {children}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default NextBtn","import styled from \"styled-components\";\r\n\r\nconst LabelContainer = styled.label`\r\n    font-size: 1rem;\r\n    width: 100%;\r\n    color: ${(props) => props.theme.colors.white};\r\n    \r\n\r\n    input {\r\n        display: none;\r\n    }\r\n\r\n    span {\r\n        margin: 0.5rem 0.5rem;\r\n        padding: 0.3rem;\r\n        width: auto;\r\n        border: 1px solid ${(props) => props.theme.colors.white};\r\n        display: inline-block;\r\n        border-radius: 8px;\r\n        position: relative;\r\n        text-align: center;\r\n        cursor: pointer;\r\n        background: transparent;\r\n    }\r\n\r\n    input:checked + span {\r\n        background: ${(props) => props.theme.colors.white};\r\n        color: ${(props) => props.theme.colors.black};\r\n    }\r\n`;\r\n\r\n\r\nexport { LabelContainer };","import React from 'react'\r\nimport { LabelContainer } from './CustomRadioBtnStyle'\r\n\r\n\r\n\r\ninterface PropsType {\r\n    id: string,\r\n    name: string,\r\n    handleCheckChieldElement : (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    value: string,\r\n    title: string,\r\n};\r\n\r\nconst CustomRadioButton = ({name, id, value, handleCheckChieldElement, title } : PropsType) => {\r\n  return (\r\n\r\n    <LabelContainer>\r\n        <input\r\n            type=\"radio\"\r\n            name={name}\r\n            value={value}\r\n            id={id}\r\n            onChange={handleCheckChieldElement}\r\n            \r\n        />\r\n        <span className=\"radio-btn\">\r\n            <div className=\"hobbies-icon\">\r\n                <p>{title}</p>\r\n            </div>\r\n        </span>\r\n    </LabelContainer>\r\n  )\r\n}\r\n\r\nexport default CustomRadioButton","import styled from \"styled-components\";\r\n\r\nconst SelectContainer = styled.select`\r\n    width: 100%;\r\n    height: 3rem;\r\n    padding: 0.5rem;\r\n    border: none;\r\n    border-radius: 0.5rem;\r\n    outline: none;\r\n`;\r\n\r\nexport { SelectContainer };","\r\nimport React, { ChangeEventHandler, useEffect, useState } from 'react'\r\nimport { AiOutlineAim } from \"react-icons/ai\";\r\nimport { SelectContainer } from './SelectStyles';\r\n\r\ntype Props = {\r\n    value: string | number,\r\n    name: string,\r\n    handleChange: ChangeEventHandler<HTMLSelectElement>;\r\n}\r\n\r\nconst SelectCountry = ({name, value, handleChange} : Props) => {\r\n    const [countries, setCountries] = useState<Record<string,string>[]>([])\r\n    \r\n    useEffect(() =>{\r\n        const data = require('./CountryData.json')\r\n        setCountries(data)\r\n    },[])\r\n  return (\r\n    <SelectContainer name={name} value={value} onChange={handleChange}>\r\n        <option value=''>--Select Country--</option>\r\n        {\r\n            countries.map((item) =>{\r\n                return(\r\n                    <option key={item.country}>\r\n                        <div>\r\n                            \r\n                            {item.country}\r\n                        </div>\r\n                    </option>\r\n                )\r\n            })\r\n        }\r\n        <AiOutlineAim/>\r\n    </SelectContainer>\r\n    \r\n  )\r\n}\r\n\r\nexport default SelectCountry","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    background: linear-gradient(to bottom, #7ed956 0%, #039525 100%);\r\n    // height: 40vmax;\r\n    padding: 1rem 2rem;\r\n    border-radius: 0.8rem;\r\n\r\n\r\n    h3{\r\n        color: ${(props) => props.theme.colors.white};\r\n        font-size: 1.2rem;\r\n        text-align: center;\r\n    }\r\n\r\n    .phone-input {\r\n        border: 1px solid #ccc;\r\n        border-radius: 4px;\r\n        \r\n        width: 100%;\r\n        font-size: 16px;\r\n        color: #555;\r\n        outline: none;\r\n        height: 3.5vmax;\r\n        padding: 10px;\r\n\r\n        &:focus {\r\n            border: 1px solid #aaa;\r\n        }\r\n    }\r\n\r\n    .meta {\r\n        margin-top: 1.5rem;\r\n    }\r\n\r\n    @media screen and (max-width: 900px) {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst Select = styled.div`\r\n    text-align: center;\r\n    margin: 0 0 0.9rem 0;\r\n    line-height: 48px;\r\n\r\n    label {\r\n        color: ${(props) => props.theme.colors.white};\r\n    }\r\n`;\r\n\r\nconst Section = styled.section`\r\n    margin-top: 0.7rem;\r\n    h4{\r\n        color: ${(props) => props.theme.colors.white};\r\n        font-size: 0.9rem;\r\n        font-weight: 500;\r\n    }\r\n`;\r\n\r\nconst FormSection = styled.section`\r\n    margin-top: 0.7rem;\r\n    padding-top: 1rem;\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n    width: 60%;\r\n    margin: 3rem auto;\r\n    display: flex;\r\n\r\n    div {\r\n        width: 10%;\r\n    }\r\n`;\r\n\r\nexport { Container,Footer, Select, Section, FormSection };","import React, { ChangeEvent, Fragment, useState } from 'react'\r\nimport NextBtn from '../../components/Button/NextBtn'\r\nimport CustomRadioButton from '../../components/CustomRadioButton/CustomRadioButton'\r\nimport InputField from '../../components/Custom_InputField/InputField'\r\nimport SelectCountry from '../../components/SelectCountry/SelectCountry'\r\nimport { Container, Footer, FormSection, Section, Select } from './RegisterStyle'\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Register = () => {\r\n\r\n  const styleInput: Record<string, any> = { \r\n    borderRadius: \"4px\",\r\n    width: \"100%\",\r\n    fontSize: \"16px\",\r\n    color: \"#555\",\r\n    outline:\" none\",\r\n    height: \"4rem\", \r\n  }\r\n\r\n\r\n  const [count, setCount] = useState<number>(1);\r\n  \r\n  const [formValue, setFormValue] = useState<Record<string,string>>({\r\n    country: \"\",\r\n    phone: \"\",\r\n    radio: \"\",\r\n    fullName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    address: \"\",\r\n    getDate: \"\",\r\n    gender: \"\"\r\n  })\r\n\r\n    let navigate = useNavigate();\r\n    \r\n    const handleRoute = () : any => {\r\n        navigate('/dashboard');\r\n    }\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n      const getValue = {...formValue}\r\n      getValue[e.target.name] = e.target.value\r\n      setFormValue(getValue)\r\n    }\r\n\r\n\r\n    const handleIncrement = () => {\r\n      \r\n      setCount((previousState) => previousState + 1);\r\n      if(count === 3) {\r\n        return setCount(3);\r\n      }\r\n    }\r\n\r\n    const handleDecrement = () => {\r\n        if(count < 2) {\r\n            return setCount(1);\r\n        }\r\n        setCount((previousState) => previousState - 1); \r\n    }\r\n\r\n  \r\n  return (\r\n    <Container>\r\n      <h3>Register</h3>\r\n      {\r\n        count === 1 && (\r\n          <Fragment>\r\n            <Select>\r\n              <label>Select Your Country</label>\r\n              <SelectCountry name=\"country\" value={formValue.country} handleChange={handleChange} />\r\n            </Select>\r\n\r\n            <Section>\r\n              <h4>PRE SCHOOL</h4>\r\n              <div>\r\n                <CustomRadioButton \r\n                  name=\"radio\"\r\n                  title=\"Reception\"\r\n                  value=\"Reception\"\r\n                  id=\"Reception\"\r\n                  handleCheckChieldElement={handleChange}\r\n                />\r\n              </div>\r\n            </Section>\r\n\r\n            <Section>\r\n              <h4>PRE SCHOOL Reception PRIMARY SCHOOL</h4>\r\n              <div>\r\n                {\r\n                  ['Grade 1', 'Grade 2', 'Grade 3', 'Grade 4', 'Grade 5', 'Grade 6'].map((item, index) => (\r\n                    <CustomRadioButton \r\n                      name=\"radio\"\r\n                      title={item}\r\n                      value={item}\r\n                      id={item}\r\n                      handleCheckChieldElement={handleChange}\r\n                    />\r\n                  ))\r\n                }\r\n              </div>\r\n            </Section>\r\n\r\n            <Section>\r\n              <h4>SECONDARY SCHOOL ENTRANCE EXAM PREP.</h4>\r\n              <div>\r\n                {\r\n                  ['British', 'Catholic', 'Military', 'National/Unity School'].map((item, index) => (\r\n                    <CustomRadioButton \r\n                      name=\"radio\"\r\n                      title={item}\r\n                      value={item}\r\n                      id={item}\r\n                      handleCheckChieldElement={handleChange}\r\n                    />\r\n                  ))\r\n                }\r\n              </div>\r\n            </Section>\r\n\r\n          </Fragment>\r\n        )\r\n      }\r\n\r\n      {\r\n        count === 2 && (\r\n          <FormSection>\r\n            <InputField\r\n              type='text'\r\n              name=\"fullName\"\r\n              placeholder=\"Full Name\"\r\n              handleChange={handleChange}\r\n              value={formValue.fullName}\r\n            />\r\n            <div className='meta'/>\r\n            <PhoneInput\r\n              country={\"ng\"}\r\n              inputProps={{\r\n                name: \"phone\",\r\n                country: \"ng\",\r\n                required: true,\r\n              }}\r\n              value={formValue.phone}\r\n              onChange={(phone: string) => setFormValue({...formValue, phone})}\r\n              inputStyle={styleInput}\r\n            />\r\n            <div className='meta'/>\r\n            <InputField\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email Address\"\r\n              handleChange={handleChange}\r\n              value={formValue.email}\r\n            />\r\n            <div className='meta'/>\r\n            <InputField\r\n              type= 'password'\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              handleChange={handleChange}\r\n              value={formValue.password}\r\n              setIcon={true}\r\n            />\r\n          </FormSection>\r\n        )\r\n      }\r\n\r\n      {\r\n        count === 3 && (\r\n          <FormSection>\r\n            <InputField\r\n              type='text'\r\n              name=\"address\"\r\n              placeholder=\"Enter your address\"\r\n              handleChange={handleChange}\r\n              value={formValue.address}\r\n            />\r\n            <div className='meta'/>\r\n            <InputField\r\n              type='date'\r\n              name=\"getDate\"\r\n              placeholder=\"Enter your address\"\r\n              handleChange={handleChange}\r\n              value={formValue.getDate}\r\n            />\r\n            <div className='meta'/>\r\n            <Section>\r\n              <h4>Gender</h4>\r\n              <div>\r\n                {\r\n                  ['Male', 'Female'].map((item, index) => (\r\n                    <CustomRadioButton \r\n                      name=\"gender\"\r\n                      title={item}\r\n                      value={item}\r\n                      id={item}\r\n                      handleCheckChieldElement={handleChange}\r\n                    />\r\n                  ))\r\n                }\r\n              </div>\r\n            </Section>\r\n\r\n\r\n\r\n          </FormSection>\r\n        )\r\n\r\n      }\r\n        \r\n\r\n      <Footer>\r\n        {\r\n          count === 2 && (\r\n            <>\r\n              <NextBtn handleClckEvent={handleDecrement}>Back</NextBtn>\r\n              <div/>\r\n              <NextBtn handleClckEvent={handleIncrement}>Next</NextBtn>\r\n            </>\r\n            \r\n          )\r\n        }\r\n\r\n        {count !== 2 && count !== 3 && (\r\n          <>\r\n            <div/>\r\n              <NextBtn handleClckEvent={handleIncrement}>Next</NextBtn>\r\n          </>\r\n        )}\r\n        \r\n        \r\n        {\r\n           count === 3 && (\r\n            <>\r\n              <NextBtn handleClckEvent={handleDecrement}>Back</NextBtn>\r\n              <div/>\r\n              <NextBtn handleClckEvent={handleRoute}>Register</NextBtn>\r\n            </>\r\n          ) \r\n        }\r\n       \r\n      </Footer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Register"],"names":["Inputcontainer","styled","props","theme","colors","white","black","type","name","value","placeholder","handleChange","setIcon","useState","viewPassword","setViewPassword","toggleContainer","useRef","useEffect","window","addEventListener","onClickOutsideHandler","removeEventListener","e","current","contains","target","ref","onChange","onClick","Container","lightGrey","children","handleClckEvent","LabelContainer","id","handleCheckChieldElement","title","className","SelectContainer","countries","setCountries","data","require","map","item","country","Select","Section","FormSection","Footer","count","setCount","phone","radio","fullName","email","password","address","getDate","gender","formValue","setFormValue","navigate","useNavigate","getValue","handleIncrement","previousState","handleDecrement","Fragment","index","InputField","inputProps","required","inputStyle","borderRadius","width","fontSize","color","outline","height"],"sourceRoot":""}