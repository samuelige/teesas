{"version":3,"file":"static/js/501.32df9da2.chunk.js","mappings":"4LAEMA,E,QAAiBC,GAAAA,IAAH,qkBAQF,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,SAa/B,SAACH,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,S,SCQ/C,EAfmB,SAAC,GAAuF,IAAtFC,EAAqF,EAArFA,KAAMC,EAA+E,EAA/EA,KAAMC,EAAyE,EAAzEA,MAAOC,EAAkE,EAAlEA,YAAaC,EAAqD,EAArDA,aAAcC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,YAExE,OACI,UAACb,EAAD,YACI,kBAAOO,KAAMA,EAAMC,KAAMA,EAAMC,MAAOA,EAAOC,YAAaA,EAAaI,SAAUH,IAG7EC,IACI,SAAC,MAAD,CAAoBG,QAASF,S,iKCrB3CG,EAAYf,EAAAA,GAAAA,IAAH,kjDAyBWgB,EAAAA,GAeT,SAAAf,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAK5B,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,SAK5B,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAejB,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAMnC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,S,GAalCJ,EAAAA,GAAAA,OAAH,kXAUY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAMnC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,S,4BCZ7C,EAlFc,WACZ,IAAMa,EAA6BC,OAAOC,WAAW,sBAErDC,QAAQC,IAAIJ,EAAWK,SAGvB,OAAkCC,EAAAA,EAAAA,UAAgC,CAChEC,MAAO,GACPC,SAAU,KAFZ,eAAOC,EAAP,KAAkBC,EAAlB,KAKA,GAAwCJ,EAAAA,EAAAA,WAAkB,GAA1D,eAAOK,EAAP,KAAqBC,EAArB,KAEMnB,EAAe,SAACoB,GACpB,IAAMC,GAAQ,UAAOL,GACrBK,EAASD,EAAEE,OAAOzB,MAAQuB,EAAEE,OAAOxB,MACnCmB,EAAaI,IAcTE,EAAqB,WACzBJ,GAAgB,IAGdK,GAAWC,EAAAA,EAAAA,MAMf,OACE,UAACpB,EAAD,YAEM,+CACE,mBACF,SAAC,IAAD,CACEqB,QAAS,KACTC,WAAY,CACV9B,KAAM,QACN6B,QAAS,KACTE,UAAU,GAEZ9B,MAAOkB,EAAUF,MACjBX,SAAU,kBAAMH,GAChB6B,eAAe,qBACfC,WApC8B,CAEtCC,aAAc,MACdC,MAAO,OACPC,SAAU,OACVC,MAAO,OACPC,QAAQ,QACRC,OAAQ,WAiCF,mBAEA,gBAAKC,UAAU,UACb,SAACC,EAAA,EAAD,CACE1C,KAAMsB,EAAe,OAAS,WAC9BrB,KAAK,WACLE,YAAY,WACZC,aAAcA,EACdF,MAAOkB,EAAUD,SACjBd,SAAS,EACTC,YAAa,kBAAMqB,MAErB,mBACF,+CACE,mBACA,mBAEA,mBAAQnB,QAxCE,WAChBoB,EAAS,eAuCH","sources":["components/Custom_InputField/InputFieldStyle.ts","components/Custom_InputField/InputField.tsx","pages/Login/LoginStyle.ts","pages/Login/Login.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Inputcontainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 1rem;\r\n    border: none;\r\n    border-radius: 4px;\r\n    background: ${(props) => props.theme.colors.white};\r\n    outline: none;\r\n\r\n    input {\r\n        border: 0;\r\n        width: 100%;\r\n        font-size: 16px;\r\n        // color: #555;\r\n        height: 4rem;\r\n        outline: none;\r\n    }\r\n\r\n    svg {\r\n        color: ${(props) => props.theme.colors.black};\r\n\r\n    }\r\n\r\n    &:focus {\r\n        border: 1px solid #aaa;\r\n    }\r\n\r\n    @media screen and (max-width: 900px) {\r\n        // padding: 2rem;\r\n    }\r\n\r\n\r\n\r\n`;\r\n\r\nexport { Inputcontainer };\r\n","import React from 'react'\r\nimport { AiFillEyeInvisible } from 'react-icons/ai';\r\nimport { Inputcontainer } from './InputFieldStyle';\r\n\r\n\r\n\r\ninterface I_InputData {\r\n    type: string,\r\n    placeholder: string,\r\n    value: string | number,\r\n    name: string,\r\n    handleChange:  (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\r\n    setIcon?: boolean;\r\n    handleClick?: () => void;\r\n};\r\n\r\nconst InputField = ({type, name, value, placeholder, handleChange, setIcon, handleClick}: I_InputData) => {\r\n\r\n    return (\r\n        <Inputcontainer>\r\n            <input type={type} name={name} value={value} placeholder={placeholder} onChange={handleChange}/> \r\n\r\n            {\r\n                setIcon && (\r\n                    <AiFillEyeInvisible onClick={handleClick}/>\r\n                )\r\n            }        \r\n        </Inputcontainer>\r\n    )\r\n}\r\n\r\nexport default InputField","import styled from \"styled-components\";\r\nimport { pic_1 } from \"../../constants/image\";\r\n\r\nconst Container = styled.div`\r\n\r\n    position: relative;\r\n    top: 0;\r\n    height: 33rem;\r\n    background: linear-gradient(to bottom, #7ed956 0%, #039525 100%);\r\n    color: #f1f1f1;\r\n    width: 100%;\r\n    transition: .7s ease;\r\n    opacity: 1;\r\n    color: white;\r\n    font-size: 20px;\r\n    padding: 20px;\r\n    z-index: 1;\r\n    border-radius: 1.2rem;\r\n\r\n    @media screen and (max-width: 900px) {\r\n        height: 40rem;\r\n    }\r\n\r\n    @media screen and (max-width: 550px) {\r\n        height: 36rem;\r\n    }\r\n\r\n    &:before {\r\n        background: url(${pic_1}) 0 0 no-repeat;\r\n        background-size: cover;\r\n        width: 100%;\r\n        height: 152px;\r\n        position: absolute;\r\n        border-radius: 1.2rem;\r\n        left: 0;\r\n        bottom: 0;\r\n        content: '';\r\n    }\r\n\r\n    \r\n    h3 {\r\n        text-align: center;\r\n        font-size: 1.1rem;\r\n        color: ${props => props.theme.colors.white};\r\n    }\r\n    \r\n    h5 {\r\n        font-size: 0.9rem;\r\n        color: ${props => props.theme.colors.black};\r\n        text-align: center;\r\n\r\n        &:hover {\r\n        cursor: pointer;\r\n        color: ${props => props.theme.colors.white};\r\n    }\r\n    \r\n    }\r\n\r\n    button {\r\n        width: 60%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin: 0 auto;\r\n\r\n        height: 2.8rem;\r\n        border-radius: 0.5rem;\r\n        background: transparent;\r\n        border: 1px solid ${props => props.theme.colors.white};\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n            background: black;\r\n            color: ${props => props.theme.colors.white};\r\n        }\r\n\r\n        @media screen and (max-width: 900px) {\r\n            height: 4rem;\r\n        }\r\n    }\r\n      \r\n}  \r\n    \r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n    width: 60%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n\r\n    height: 2.8rem;\r\n    border-radius: 0.5rem;\r\n    background: transparent;\r\n    border: 1px solid ${props => props.theme.colors.white};\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        background: black;\r\n        color: ${props => props.theme.colors.white};\r\n    }\r\n\r\n`;\r\n\r\nexport { Container, Button };","import React, { useState } from 'react'\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Container } from './LoginStyle'\r\n\r\nimport InputField from '../../components/Custom_InputField/InputField'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n  const mediaMatch: MediaQueryList = window.matchMedia('(min-width: 900px)');\r\n  \r\n  console.log(mediaMatch.matches)\r\n\r\n\r\n  const [formValue, setFormValue] = useState<Record<string,string>>({\r\n    phone: \"\",\r\n    password: \"\",\r\n  })\r\n\r\n  const [viewPassword, setViewPassword] = useState<boolean>(false)\r\n\r\n  const handleChange = (e: any) => {\r\n    const getValue = {...formValue}\r\n    getValue[e.target.name] = e.target.value\r\n    setFormValue(getValue)\r\n  }\r\n\r\n  const styleInput: Record<string, any> = { \r\n   \r\n    borderRadius: \"4px\",\r\n    width: \"100%\",\r\n    fontSize: \"16px\",\r\n    color: \"#555\",\r\n    outline:\" none\",\r\n    height: \"4rem\",\r\n    \r\n  }\r\n\r\n  const handleViewPassword = () => {\r\n    setViewPassword(true);\r\n  }\r\n\r\n  let navigate = useNavigate();\r\n    \r\n  const handleRoute = () : any => {\r\n      navigate('/dashboard');\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n\r\n          <h3>Let's Get Started</h3>\r\n            <br/>\r\n          <PhoneInput\r\n            country={\"ng\"}\r\n            inputProps={{\r\n              name: \"phone\",\r\n              country: \"ng\",\r\n              required: true,\r\n            }}\r\n            value={formValue.phone}\r\n            onChange={() => handleChange}\r\n            containerClass=\"my-container-class\"\r\n            inputStyle={styleInput}\r\n\r\n            // inputClass=\"phone-input\"\r\n          />\r\n          <br/>\r\n            \r\n          <div className='meta'/>\r\n            <InputField\r\n              type={viewPassword ? 'text' : 'password'}\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              handleChange={handleChange}\r\n              value={formValue.password}\r\n              setIcon={true}\r\n              handleClick={() => handleViewPassword}\r\n            />\r\n            <br/>\r\n          <h5>Forgot Password ?</h5>\r\n            <br/>\r\n            <br/>\r\n\r\n            <button onClick={handleRoute}>LOGIN</button>\r\n        \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login"],"names":["Inputcontainer","styled","props","theme","colors","white","black","type","name","value","placeholder","handleChange","setIcon","handleClick","onChange","onClick","Container","pic_1","mediaMatch","window","matchMedia","console","log","matches","useState","phone","password","formValue","setFormValue","viewPassword","setViewPassword","e","getValue","target","handleViewPassword","navigate","useNavigate","country","inputProps","required","containerClass","inputStyle","borderRadius","width","fontSize","color","outline","height","className","InputField"],"sourceRoot":""}