{"version":3,"file":"static/js/501.1ff641bd.chunk.js","mappings":"kLAEMA,E,QAAYC,GAAAA,OAAH,6SAKG,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,aACxB,SAACH,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,SAIzC,SAACJ,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,SAGrB,SAACJ,GAAD,OAAWA,EAAMC,MAAMC,OAAOG,S,SCCpD,EARgB,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,gBAC1B,OACE,SAACT,EAAD,CAAWU,QAASD,EAApB,SACKD,M,sFCVHG,E,QAAiBV,GAAAA,IAAH,kjBAQF,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,S,SCsBhD,EAfmB,SAAC,GAAuF,IAAtFM,EAAqF,EAArFA,KAAMC,EAA+E,EAA/EA,KAAMC,EAAyE,EAAzEA,MAAOC,EAAkE,EAAlEA,YAAaC,EAAqD,EAArDA,aAAcC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,YAExE,OACI,UAACP,EAAD,YACI,kBAAOC,KAAMA,EAAMC,KAAMA,EAAMC,MAAOA,EAAOC,YAAaA,EAAaI,SAAUH,IAG7EC,IACI,SAAC,MAAD,CAAoBP,QAASQ,S,oICrB3ClB,EAAYC,EAAAA,GAAAA,IAAH,w3EA6BWmB,EAAAA,GAeL,SAAAlB,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,SAK5B,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,SAK5B,SAAAL,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,SAyBzB,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,SAQ5B,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,SAarB,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,SAKnC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,S,GAgErCL,EAAAA,GAAAA,OAAH,kXAUY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,SAMnC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,S,mEC7G7C,EAvEc,WACZ,OAAkCe,EAAAA,EAAAA,UAAgC,CAChEC,MAAO,GACPC,SAAU,KAFZ,eAAOC,EAAP,KAAkBC,EAAlB,KAKA,GAAwCJ,EAAAA,EAAAA,WAAkB,GAA1D,eAAOK,EAAP,KAAqBC,EAArB,KAEMX,EAAe,SAACY,GACpB,IAAMC,GAAQ,UAAOL,GACrBK,EAASD,EAAEE,OAAOjB,MAAQe,EAAEE,OAAOhB,MACnCW,EAAaI,IAYTE,EAAqB,WACzBJ,GAAgB,IAGdK,GAAWC,EAAAA,EAAAA,MAMf,OACE,UAACjC,EAAD,YAEM,+CACE,mBACF,SAAC,IAAD,CACEkC,QAAS,KACTC,WAAY,CACVtB,KAAM,QACNqB,QAAS,KACTE,UAAU,GAEZtB,MAAOU,EAAUF,MACjBH,SAAU,kBAAMH,GAChBqB,WAjC8B,CACtCC,aAAc,MACdC,MAAO,OACPC,SAAU,OACVC,MAAO,OACPC,QAAQ,QACRC,OAAQ,cA6BF,mBAEA,gBAAKC,UAAU,UACb,SAACC,EAAA,EAAD,CACEjC,KAAMc,EAAe,OAAS,WAC9Bb,KAAK,WACLE,YAAY,WACZC,aAAcA,EACdF,MAAOU,EAAUD,SACjBN,SAAS,EACTC,YAAa,kBAAMa,MAErB,mBACF,+CACE,mBACA,mBACF,SAACe,EAAA,EAAD,CAASrC,gBApCG,WAChBuB,EAAS,eAmCL","sources":["components/Button/NextBtnStyles.ts","components/Button/NextBtn.tsx","components/Custom_InputField/InputFieldStyle.ts","components/Custom_InputField/InputField.tsx","pages/Login/LoginStyle.ts","pages/Login/Login.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Container = styled.button`\r\n    width: 100%;\r\n    padding: 0.5rem 1rem;\r\n    outline: none;\r\n    text-align: center;\r\n    background: ${(props) => props.theme.colors.lightGrey};\r\n    border: 1px solid ${(props) => props.theme.colors.white};\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n    color: ${(props) => props.theme.colors.white};\r\n\r\n    &:hover {\r\n        background: ${(props) => props.theme.colors.black};\r\n    }\r\n`;\r\n\r\nexport { Container };","import React, { ReactNode } from 'react'\r\nimport { Container } from './NextBtnStyles';\r\n\r\ninterface BtnTypes {\r\n    children: ReactNode;\r\n    handleClckEvent: () => void ;\r\n}\r\n\r\nconst NextBtn = ({children, handleClckEvent }: BtnTypes) => {\r\n  return (\r\n    <Container onClick={handleClckEvent}>\r\n        {children}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default NextBtn","import styled from \"styled-components\";\r\nconst Inputcontainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 1rem;\r\n    border: none;\r\n    border-radius: 4px;\r\n    background: ${(props) => props.theme.colors.white};\r\n    // padding: 10px;\r\n    height: 3.5vmax;\r\n    outline: none;\r\n\r\n    input {\r\n        border: 0;\r\n        width: 100%;\r\n        font-size: 16px;\r\n        color: #555;\r\n        height: 100%;\r\n        outline: none;\r\n        // height: 3.5vmax;\r\n        // padding: 10px;\r\n\r\n        \r\n    }\r\n\r\n    &:focus {\r\n        border: 1px solid #aaa;\r\n    }\r\n`;\r\n\r\nexport { Inputcontainer };\r\n","import React from 'react'\r\nimport { AiFillEyeInvisible } from 'react-icons/ai';\r\nimport { Inputcontainer } from './InputFieldStyle';\r\n\r\n\r\n\r\ninterface I_InputData {\r\n    type: string,\r\n    placeholder: string,\r\n    value: string | number,\r\n    name: string,\r\n    handleChange:  (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\r\n    setIcon?: boolean;\r\n    handleClick?: () => void;\r\n};\r\n\r\nconst InputField = ({type, name, value, placeholder, handleChange, setIcon, handleClick}: I_InputData) => {\r\n\r\n    return (\r\n        <Inputcontainer>\r\n            <input type={type} name={name} value={value} placeholder={placeholder} onChange={handleChange}/> \r\n\r\n            {\r\n                setIcon && (\r\n                    <AiFillEyeInvisible onClick={handleClick}/>\r\n                )\r\n            }        \r\n        </Inputcontainer>\r\n    )\r\n}\r\n\r\nexport default InputField","import styled from \"styled-components\";\r\nimport { pic_1 } from \"../../constants/image\";\r\n\r\nconst Container = styled.div`\r\n\r\n    position: relative;\r\n    top: 0;\r\n    height: 40vmax;\r\n    background: linear-gradient(to bottom, #7ed956 0%, #039525 100%);\r\n    color: #f1f1f1;\r\n    width: 100%;\r\n    transition: .7s ease;\r\n    opacity: 1;\r\n    color: white;\r\n    font-size: 20px;\r\n    padding: 20px;\r\n    z-index: 1;\r\n    border-radius: 1.2rem;\r\n\r\n    @media screen and (max-width: 900px) {\r\n        height: 45vmax;\r\n    }\r\n\r\n    @media screen and (max-width: 550px) {\r\n        height: 70vmax;\r\n    }\r\n\r\n    @media(max-width: 320px){\r\n        height: 70vmax;\r\n    }\r\n\r\n    &:before {\r\n        background: url(${pic_1}) 0 0 no-repeat;\r\n        background-size: cover;\r\n        width: 100%;\r\n        height: 152px;\r\n        position: absolute;\r\n        border-radius: 1.2rem;\r\n        left: 0;\r\n        bottom: 0;\r\n        content: '';\r\n    }\r\n\r\n    \r\n        h3 {\r\n            text-align: center;\r\n            font-size: 1.1rem;\r\n            color: ${props => props.theme.colors.white};\r\n        }\r\n    \r\n        h5 {\r\n            font-size: 0.9rem;\r\n            color: ${props => props.theme.colors.black};\r\n            text-align: center;\r\n\r\n            &:hover {\r\n            cursor: pointer;\r\n            color: ${props => props.theme.colors.white};\r\n        }\r\n\r\n        \r\n\r\n\r\n    \r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    \r\n    // .login_container {\r\n    //     position: absolute;\r\n    //     width: 36%;\r\n    //     top: 30%;\r\n    //     z-index: 2;\r\n    //     padding: 0.9rem;\r\n    //     text-align: center;\r\n\r\n\r\n    //     h3 {\r\n    //         font-size: 1.1rem;\r\n    //         color: ${props => props.theme.colors.white};\r\n    //     }\r\n\r\n    //     h5 {\r\n    //         font-size: 0.9rem;\r\n\r\n    //         &:hover {\r\n    //         cursor: pointer;\r\n    //         color: ${props => props.theme.colors.white};\r\n    //     }\r\n\r\n    //     @media screen and (max-width: 900px) {\r\n    //         width: 100%;\r\n    //     }\r\n    // }\r\n\r\n    // button {\r\n        // width: 60%;\r\n        // height: 2.8rem;\r\n        // border-radius: 0.5rem;\r\n        // background: transparent;\r\n        // border: 1px solid ${props => props.theme.colors.white};\r\n\r\n    //     &:hover {\r\n    //         cursor: pointer;\r\n    //         background: black;\r\n    //         color: ${props => props.theme.colors.white};\r\n    //     }\r\n    // }\r\n\r\n    // @media screen and (max-width: 900px) {\r\n    //     top: 15%;\r\n\r\n    //     .login_container {\r\n    //         position: absolute;\r\n    //         width: 100%;\r\n    //         top: 30%;\r\n    //         z-index: 2;\r\n    //         padding: 0.9rem;\r\n    //         text-align: center;\r\n    //     :\r\n\r\n    // }\r\n      \r\n}\r\n\r\n    \r\n    \r\n`;\r\n\r\n// const Overlay = styled.div`\r\n    // position: relative;\r\n    // top: 0;\r\n    // height: 34vmax;\r\n    // background: linear-gradient(to bottom, #7ed956 0%, #039525 100%);\r\n    // color: #f1f1f1;\r\n    // width: 100%;\r\n    // transition: .7s ease;\r\n    // opacity: 1;\r\n    // color: white;\r\n    // font-size: 20px;\r\n    // padding: 20px;\r\n    // z-index: 1;\r\n    // border-radius: 1.2rem;\r\n\r\n    // &:before {\r\n    //     background: url(${pic_1}) 0 0 no-repeat;\r\n    //     background-size: cover;\r\n    //     width: 100%;\r\n    //     height: 152px;\r\n    //     position: absolute;\r\n    //     border-radius: 1.2rem;\r\n    //     left: 0;\r\n    //     bottom: 0;\r\n    //     content: '';\r\n    // }\r\n\r\n//     @media screen and (max-width: 900px) {\r\n//         // padding: 100px;\r\n//         // width: 300px;\r\n//         width: 46vmax;\r\n//         height: 40vmax;\r\n//     }\r\n\r\n//     @media screen and (max-width: 550px) {\r\n//         padding: 0;\r\n//         // width: 43vmax;\r\n//     }\r\n// `;\r\n\r\nconst Button = styled.button`\r\n    width: 60%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n\r\n    height: 2.8rem;\r\n    border-radius: 0.5rem;\r\n    background: transparent;\r\n    border: 1px solid ${props => props.theme.colors.white};\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        background: black;\r\n        color: ${props => props.theme.colors.white};\r\n    }\r\n\r\n`;\r\n\r\nexport { Container, Button };","import React, { useState } from 'react'\r\nimport { Container } from './LoginStyle'\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport InputField from '../../components/Custom_InputField/InputField'\r\nimport NextBtn from '../../components/Button/NextBtn'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n  const [formValue, setFormValue] = useState<Record<string,string>>({\r\n    phone: \"\",\r\n    password: \"\",\r\n  })\r\n\r\n  const [viewPassword, setViewPassword] = useState<boolean>(false)\r\n\r\n  const handleChange = (e: any) => {\r\n    const getValue = {...formValue}\r\n    getValue[e.target.name] = e.target.value\r\n    setFormValue(getValue)\r\n  }\r\n\r\n  const styleInput: Record<string, any> = { \r\n    borderRadius: \"4px\",\r\n    width: \"100%\",\r\n    fontSize: \"16px\",\r\n    color: \"#555\",\r\n    outline:\" none\",\r\n    height: \"3.5vmax\",\r\n  }\r\n\r\n  const handleViewPassword = () => {\r\n    setViewPassword(true);\r\n  }\r\n\r\n  let navigate = useNavigate();\r\n    \r\n  const handleRoute = () : any => {\r\n      navigate('/dashboard');\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n\r\n          <h3>Let's Get Started</h3>\r\n            <br/>\r\n          <PhoneInput\r\n            country={\"ng\"}\r\n            inputProps={{\r\n              name: \"phone\",\r\n              country: \"ng\",\r\n              required: true,\r\n            }}\r\n            value={formValue.phone}\r\n            onChange={() => handleChange}\r\n            inputStyle={styleInput}\r\n          />\r\n          <br/>\r\n            \r\n          <div className='meta'/>\r\n            <InputField\r\n              type={viewPassword ? 'text' : 'password'}\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              handleChange={handleChange}\r\n              value={formValue.password}\r\n              setIcon={true}\r\n              handleClick={() => handleViewPassword}\r\n            />\r\n            <br/>\r\n          <h5>Forgot Password ?</h5>\r\n            <br/>\r\n            <br/>\r\n          <NextBtn handleClckEvent={handleRoute}>Register</NextBtn>\r\n        \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login"],"names":["Container","styled","props","theme","colors","lightGrey","white","black","children","handleClckEvent","onClick","Inputcontainer","type","name","value","placeholder","handleChange","setIcon","handleClick","onChange","pic_1","useState","phone","password","formValue","setFormValue","viewPassword","setViewPassword","e","getValue","target","handleViewPassword","navigate","useNavigate","country","inputProps","required","inputStyle","borderRadius","width","fontSize","color","outline","height","className","InputField","NextBtn"],"sourceRoot":""}